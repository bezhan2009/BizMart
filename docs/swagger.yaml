basePath: /
definitions:
  models.Category:
    properties:
      category_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      parent_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.CategoryRequest:
    properties:
      category_name:
        description: Название категории, обязательное поле
        type: string
      description:
        description: Описание категории, необязательное поле
        type: string
      parent_id:
        description: Идентификатор родительской категории, необязательное поле
        type: integer
    required:
    - category_name
    type: object
  models.DefaultResponse:
    properties:
      error:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.TokenResponse:
    properties:
      access_token:
        type: string
      user_id:
        type: integer
    type: object
  models.UserLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.UserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8585
info:
  contact: {}
  description: API Server for BizMart Application
  title: BizMart API
  version: 1.0.2
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: This endpoint logs in an existing user using their username, email,
        and password.
      parameters:
      - description: User login information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User login
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: This endpoint registers a new user with a username, email, and
        password.
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /category:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all categories
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Создаёт новую категорию с указанными параметрами
      parameters:
      - description: Данные для новой категории
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Создать новую категорию
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete category by ID
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: Retrieves a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get category by ID
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Обновляет информацию о категории по её ID
      parameters:
      - description: ID категории
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления категории
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное обновление
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Обновить категорию
      tags:
      - Category
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
